[program:cache_jobs_to_redis]
command=python3 cache_jobs_to_redis.py                                         ; 每隔一段时间更新任务到redis
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/cache_jobs_to_redis.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/cache_jobs_to_redis.log                      ; 错误日志
stderr_logfile_maxbytes=10MB


[program:throw_jobs_to_pipeline_15]
command=python3 throw_jobs_to_pipeline.py 15                                         ; 将间隔时间15秒的任务丢给pipeline
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_pipeline.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_pipeline.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:throw_jobs_to_pipeline_30]
command=python3 throw_jobs_to_pipeline.py 30                                         ; 将间隔时间30秒的任务丢给pipeline
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_pipeline.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_pipeline.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:throw_jobs_to_pipeline_60]
command=python3 throw_jobs_to_pipeline.py 60                                         ; 将间隔时间60秒的任务丢给pipeline
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_pipeline.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_pipeline.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:throw_jobs_to_celery_worker_static]
command=python3 throw_jobs_to_celery_worker.py static                                    ; 从管道将静态任务对给celery处理
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:throw_jobs_to_celery_worker_json]
command=python3 throw_jobs_to_celery_worker.py json                                    ; 从管道将静态任务对给json处理
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:throw_jobs_to_celery_worker_render]
command=python3 throw_jobs_to_celery_worker.py render                                    ; 从管道将静态任务对给render处理
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/throw_jobs_to_celery_worker.log                      ; 错误日志
stderr_logfile_maxbytes=10MB

[program:save_response_to_db]
command=python3 save_response_to_db.py                                ; 将爬取到的结果存储到数据库
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/save_response_to_db.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/save_response_to_db.log                      ; 错误日志
stderr_logfile_maxbytes=10MB


[program:store_crawl_content_task]
command=python3 store_crawl_content_task.py                                ; 定时检查出没有爬到正文的item丢给爬正文的任务
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/store_crawl_content_task.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/store_crawl_content_task.log                      ; 错误日志
stderr_logfile_maxbytes=10MB


[program:store_crawl_special_content_task]
command=python3 store_crawl_special_content_task.py                                ; 定时检查出没有爬到正文的item丢给爬正文的任务
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/store_crawl_special_content_task.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/store_crawl_special_content_task.log                      ; 错误日志
stderr_logfile_maxbytes=10MB


[program:save_content_to_db]
command=python3 save_content_to_db.py                                ; 将爬到的正文内容存储的数据库
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/save_content_to_db.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/save_content_to_db.log                      ; 错误日志
stderr_logfile_maxbytes=10MB


[program:auto_check_job]
command=python3 auto_check_job.py                            ; 将爬到的正文内容存储的数据库
directory=/app_pipeline                                                       ; 项目的文件夹路径
startsecs=0                                                                   ; 启动时间
stopwaitsecs=0                                                                ; 终止等待时间
autostart=true                                                                ; 是否自动启动
autorestart=true                                                              ; 是否自动重启
stdout_logfile=/var/log/auto_check_job.log                      ; log 日志
stdout_logfile_maxbytes=10MB
stderr_logfile=/var/log/auto_check_job.log                      ; 错误日志
stderr_logfile_maxbytes=10MB